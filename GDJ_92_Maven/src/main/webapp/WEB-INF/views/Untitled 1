#Notice
목록
/notice/list : GET	/WEB-INF/views/notice.list.jsp

등록
/notice/add : GET	/WEB-INF/views/notice/add/jsp
/notice/add : POST	(확인 메세지 출력 후 목록으로 이동)

상세
/notice/detail : GET	/WEB-INF/views/notice/detail.jsp






##############
#Product
상품목록
/products/list	GET		/WEB-INF/views/products/list.jsp

상품상세
/products/detail	GET		/WEB-INF/views/produts/detail.jsp

상품등록
/products/add	GET 		/WEB-INF/views/produts/product_form.jsp
/products/add	POST		(확인 메세지 출력 후 목록으로 이동) 

상품수정
/products/update		GET		/WEB-INF/views/products/product_form.jsp
/products/update		POST		(확인 메세지 출력 후 해당 디테일 페이지로 이동)

상품삭제
/products/delete		POST		(확인 메세지 출력 후 목록으로 이동)



#############
# paging 처리
원본글 : 질문
부모글 : 질문글의 부모

REF : 글들을 그룹으로 묶음
원본글: 자기의 글번호가 REF 값으로 지정
답글 : 부모의 REF를 자기의 REF로 지정

STEP : 그룹내에서 순서를 지정
원본글 : 무조건 0
답글 : 
a) update : REF가 부모의 REF와 같고 Step이 부모의 초과인것들을 각각 1씩 증가
b) 부모의 Step에 +1 한 값을 자기의 Step으로 지정


DEPTH : 들여쓰기 횟수
원본글 : 무조건 0
답글 : 부모의 depth에 +1 한 값을 자기의 depth로 지정

++)
boardRef:
답글이 속한 그룹(원글 or 최상위글의 PK).
원글/답글/대댓글 모두 같은 ref를 공유.

boardStep:
출력 순서.
같은 ref 내에서 step이 낮을수록 먼저 나옴.
답글 등록 시, 해당 그룹 내 나보다 step이 큰 애들은 모두 +1(밀려남).

boardDepth:
계층(들여쓰기 단계).
원글이면 0, 바로 밑 답글이면 1, 그 밑이면 2...




글번호	글제목 	  REF		STEP		DEPTH
1		  t1		   1		  0		    0
2 		  t2		   2		  0		    0
3		  t1_1		   1		  2  		    1
4		  t1_2		   1		  1 		    1
5		  t1_1_1 	   1 		  3		    2
6		  t2_1		   2		  1		    1
7		  t1_2_1	   1		  2 		    2


select *From QNA oreder by ref desc, step asc

2 		  t2		   2		  0
6		  t2_1		   2		  1
1		  t1		   1		  0
4		  t1_2		   1		  1
7		  t1_2_1	   1		  2 
3		  t1_1		   1		  2
5		  t1_1_1 	   1 		  3






totalCount : 총 글의 갯수
perPage : 한 페이지에 보여줄 글의 갯수


totalPage = totalCount/10
if (totalCount % 10 != 0) {
	totalPage++;
}

1. DB에서 일정한 갯수만큼 조회
2. JSP에 페이지 번호를 출력

--
pageNum	startNum
1		0
2		10
3		20
4		30

(pageNum-1)*endIndex = startIndex


--
pageNum	curBlock
1		1
2		1
5		1
6		2
10		2
11		3


--
curBlock	startNum	endNum
1		1		5
2		6		10
3		11		15

startNum =  (curBlock-1)*perBlock+1
endNum = curBlock*perBlock









##############
URL : 
/member/join, 	GET

/member/join, 	POST, username, password..., 

/member/login,	POST, username, password



##############
ADMIN

MANAGER

MEMBER









